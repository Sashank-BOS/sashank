@model BOS.LaunchPad.Features.UserManagement.UserManagementOverviewViewModel
@using Microsoft.AspNetCore.Http
@using Newtonsoft.Json
@using BOS.LaunchPad.Models
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewData["Title"] = "User";
}
@{
    var eMessage = ""; var sMessage = "";
    if (HttpContextAccessor.HttpContext.Session.GetString("ErrorMessage") != null)
    {
        eMessage = HttpContextAccessor.HttpContext.Session.GetString("ErrorMessage");
        HttpContextAccessor.HttpContext.Session.Remove("ErrorMessage");
    }
    if (HttpContextAccessor.HttpContext.Session.GetString("SuccessMessage") != null)
    {
        sMessage = HttpContextAccessor.HttpContext.Session.GetString("SuccessMessage");
        HttpContextAccessor.HttpContext.Session.Remove("SuccessMessage");
    }
}
<script type="text/javascript">
    var errorMessage = "@eMessage";
    var successMessage = "@sMessage";
</script>
<div class="container p-0 m-0">
    <div class="row">
        <div class="col-6 pt-2">
            <h4>Users</h4>
        </div>
        <div class="col-6 text-right">
            <button class="btn btn-secondary btn-sm" style="float: right" onclick="showAddUser()"><i class="fa fa-plus"></i> New User</button>
            <input class="form-control form-control-sm col-md-3 float-right mr-3" id="searchUsers" aria-describedby="Search" type="text" placeholder="Search by name or email" onkeyup="filterUsers();">
        </div>
        <div class="col-12">
            <input type="hidden" id="hiddenUserId" />
            <table class="table mt-3">
                <thead>
                    <tr>
                        <th scope="col">First Name</th>
                        <th scope="col">Last Name</th>
                        <th scope="col">Username</th>
                        <th scope="col">Email</th>
                        <th scope="col">Roles</th>
                        <th scope="col">Edited/Added</th>
                        <th scope="col">Action</th>
                    </tr>
                </thead>
                <tbody id="userBody">
                    @foreach (var user in Model.FilteredUsers)
                    {
                        <tr>
                            <td>@user.FirstName</td>
                            <td>@user.LastName</td>
                            <td>@user.Username</td>
                            <td>@user.Email</td>
                            <td>
                                @user.Roles.Count
                                @if (@user.Roles.Count > 0)
                                {
                                    var myRoles = "";
                                    @foreach (var r in @user.Roles)
                                    {
                                        @if (myRoles == "")
                                        {
                                            myRoles = r.Role.Name;
                                        }
                                        else
                                        {
                                            myRoles += "," + r.Role.Name;
                                        }
                                    }
                                    <div>@myRoles</div>
                                }
                            </td>
                            <td>
                                @user.LastModifiedOn.ToString("MMM d, yyyy")
                                <div>@user.CreatedOn.ToString("MMM d, yyyy")</div>
                            </td>
                            <td>
                                <div class="dropdown">
                                    <a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <i class="fas fa-ellipsis-v"></i>
                                    </a>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink1">
                                        <a href="#" class="dropdown-item" id="@user.Id" onclick="showEditUser(this.id)">Edit</a>
                                        <a href="#" class="dropdown-item" id="@user.Id" onclick="changePassword(this.id)">Change Password</a>
                                        <a href="#" class="dropdown-item" id="@user.Id" onclick="deleteUser(this.id)">Delete</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <!-- pager -->
            @if (Model.Pager.Pages.Any())
            {
                @if (Model.Pager.TotalPages > 1)
                {
                    <nav class="table-responsive">
                        <ul class="pagination justify-content-center d-flex flex-wrap">
                            @if (Model.Pager.CurrentPage > 1)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-controller="UserManagement" asp-action="OnPageClick" asp-route-Id="1">First</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" asp-controller="UserManagement" asp-action="OnPageClick" asp-route-Id="@(Model.Pager.CurrentPage - 1)">Previous</a>
                                </li>
                            }

                            @foreach (var p in Model.Pager.Pages)
                            {
                                <li class="page-item @(p == Model.Pager.CurrentPage ? "active" : "")">
                                    <a class="page-link" asp-controller="UserManagement" asp-action="OnPageClick" asp-route-Id="@p">@p</a>
                                </li>
                            }

                            @if (Model.Pager.CurrentPage < Model.Pager.TotalPages)
                            {
                                <li class="page-item">
                                    <a class="page-link" asp-controller="UserManagement" asp-action="OnPageClick" asp-route-Id="@(Model.Pager.CurrentPage + 1)">Next</a>
                                </li>
                                <li class="page-item">
                                    <a class="page-link" asp-controller="UserManagement" asp-action="OnPageClick" asp-route-Id="@(Model.Pager.TotalPages)">Last</a>
                                </li>
                            }
                        </ul>
                    </nav>
                }
            }
        </div>
    </div>
</div>

<div class="modal fade" id="addUserModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addUserModalTitle">
                    New User
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="addUserBody">
                .....
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="editUserModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editUserModalTitle">
                    Edit User
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="editUserBody">
                .....
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="changePasswordModal" tabindex="-1" role="dialog" aria-labelledby="modalLabel" aria-hidden="true">
    <div class="modal-dialog modal-md" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordModalTitle">
                    Change Password
                </h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="changePasswordBody">
                .....
            </div>
        </div>
    </div>
</div>


<environment include="Development">
    <script src="~/lib/jquery/dist/jquery.js"></script>
    <script src="~/lib/popper.js/popper.js"></script>
</environment>
<environment exclude="Development">
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
</environment>

<script>

    var usersArray = '', filteredUsers = '';

    $(document).ready(function () {

        usersArray = @Html.Raw(Json.Serialize(Model.Users));

        $("#home").removeClass("active");
        $("#roleManagement").removeClass("active");
        $("#userManagement").addClass("active");
        $("#permissionManagement").removeClass("active");

        if (errorMessage != "") {
            displayDialog(errorMessage, "");
        }

        if (successMessage != "") {
            displayDialog(successMessage, "success");
        }
    });

    function deleteUser(id) {
        var userId = id;
        $("#hiddenUserId").val(userId);
        $("#headerPopUp").text("Are you sure, you want to delete this user?");
        $("#mainPopUp").removeClass("d-none");

        $("#cancelPopUp").off("click");
        $("#cancelPopUp").on("click", function (e) {
            $("#mainPopUp").addClass("d-none");
            $("#hiddenUserId").val("");
        });

        $("#savePopUp").off("click");
        $("#savePopUp").on("click", function (e) {
            $.get("@Url.Action("Delete", "UserManagement")/" + $("#hiddenUserId").val(),
                function (data) {
                    if (data == "") {
                        $("#mainPopUp").addClass("d-none");
                        displayDialog("User deleted successfully", "success");
                        location.href = "@Url.Action("Index", "UserManagement")";
                    }
                    else {
                        displayDialog(data, "");
                    }
                });
        });
    }

    function displayDialog(message, mode) {
        var displayClass = "alert-danger";
        if (mode == "") {
            displayClass = "alert-danger";
        }
        else {
            displayClass = "alert-success";
        }
        var dialog = '<div id="display_message" class="alert ' + displayClass + ' alert-dismissible fade show">'
            + '' + message + ''
            + '<a href="#" class="close" data-dismiss="alert" aria-label="close" title="close">×</a>'
            + '</div>';
        $("body").append($(dialog));
        setTimeout(function () {
            $("#display_message").remove();
        }, 5000);
    }

    function showAddUser() {
        $('#editUserBody').html("");
        $('#addUserBody').html("");
        $('#changePasswordBody').html("");
            $.get("@Url.Action("AddUser", "UserManagement")",
                function (data) {
                    $('#addUserBody').html(data);
                });
            $('#addUserModal').modal('show');
    }

    function showEditUser(id) {
        $('#editUserBody').html("");
        $('#addUserBody').html("");
        $('#changePasswordBody').html("");
        $.get("@Url.Action("Edit", "UserManagement")/" + id,
                function (data) {
                    $('#editUserBody').html(data);
                });
            $('#editUserModal').modal('show');
    }

    function changePassword(id) {
        $('#editUserBody').html("");
        $('#addUserBody').html("");
        $('#changePasswordBody').html("");
        $.get("@Url.Action("ChangePassword", "UserManagement")/" + id,
                function (data) {
                    $('#changePasswordBody').html(data);
                });
        $('#changePasswordModal').modal('show');
    }

    function filterUsers() {
        filteredUsers = $.grep(usersArray, function (el) {
            return (el.FirstName.toLowerCase().startsWith($("#searchUsers").val()) || el.LastName.toLowerCase().startsWith($("#searchUsers").val()) || el.Email.toLowerCase().startsWith($("#searchUsers").val()))
        });
        if (filteredUsers != "") {
            if (filteredUsers.length > 0) {
                $("#userBody").empty();
                $(".table-responsive").remove();
                for (var i = 0; i < filteredUsers.length; i++) {
                    var myRoles = "";
                    if (filteredUsers[i].Roles.length > 0) {
                        for (var j = 0; j < filteredUsers[i].Roles.length; j++) {
                            if (myRoles == "") {
                                myRoles = filteredUsers[i].Roles[j].Role.Name;
                            }
                            else {
                                myRoles += "," + filteredUsers[i].Roles[j].Role.Name;
                            }
                        }
                    }
                    var options = { year: 'numeric', month: 'short', day: 'numeric' };
                    var createdOn = new Date(filteredUsers[i].CreatedOn).toLocaleDateString("en-US", options);
                    var modifiedOn = new Date(filteredUsers[i].LastModifiedOn).toLocaleDateString("en-US", options);
                    $("#userBody").append('<tr><td>' + filteredUsers[i].FirstName + '</td><td>' + filteredUsers[i].LastName + '</td><td>' + filteredUsers[i].Username + '</td><td>' + filteredUsers[i].Email + '</td><td>' + filteredUsers[i].Roles.length + '<div>' + myRoles + '</div></td><td>' + modifiedOn + '<div>' + createdOn + '</div></td><td><div class="dropdown"><a class="dropdown-toggle" href="#" role="button" id="dropdownMenuLink1" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fas fa-ellipsis-v"></i></a><div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink1"><a href="#" class="dropdown-item" id="' + filteredUsers[i].Id + '" onclick="showEditUser(this.id)">Edit</a><a href="#" class="dropdown-item" id="' + filteredUsers[i].Id + '" onclick="changePassword(this.id)">Change Password</a><a href="#" class="dropdown-item" id="' + filteredUsers[i].Id + '" onclick="deleteUser(this.id)">Delete</a></div></div></td></tr>');
                }
            }
        }
    }

</script>

